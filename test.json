{
  'builds': [
    {
      'id': 'GitPullCodeBuild-zHs8bEARfXWG:c16f26b4-3ed1-4b6d-82e9-3f491b813671',
      'arn': 'arn:aws:codebuild:us-east-1:025870537499:build/GitPullCodeBuild-zHs8bEARfXWG:c16f26b4-3ed1-4b6d-82e9-3f491b813671',
      'buildNumber': 6,
      'startTime': datetime.datetime(2021,
      11,
      18,
      20,
      29,
      25,
      979000,
      tzinfo=tzlocal()),
      'endTime': datetime.datetime(2021,
      11,
      18,
      20,
      29,
      39,
      260000,
      tzinfo=tzlocal()),
      'currentPhase': 'COMPLETED',
      'buildStatus': 'SUCCEEDED',
      'projectName': 'GitPullCodeBuild-zHs8bEARfXWG',
      'phases': [
        {
          'phaseType': 'SUBMITTED',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          25,
          979000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          26,
          32000,
          tzinfo=tzlocal()),
          'durationInSeconds': 0
        },
        {
          'phaseType': 'QUEUED',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          26,
          32000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          26,
          472000,
          tzinfo=tzlocal()),
          'durationInSeconds': 0
        },
        {
          'phaseType': 'PROVISIONING',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          26,
          472000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          31,
          506000,
          tzinfo=tzlocal()),
          'durationInSeconds': 5,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'DOWNLOAD_SOURCE',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          31,
          506000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          34,
          768000,
          tzinfo=tzlocal()),
          'durationInSeconds': 3,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'INSTALL',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          34,
          768000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          34,
          810000,
          tzinfo=tzlocal()),
          'durationInSeconds': 0,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'PRE_BUILD',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          34,
          810000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          34,
          852000,
          tzinfo=tzlocal()),
          'durationInSeconds': 0,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'BUILD',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          34,
          852000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          37,
          11000,
          tzinfo=tzlocal()),
          'durationInSeconds': 2,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'POST_BUILD',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          37,
          11000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          37,
          124000,
          tzinfo=tzlocal()),
          'durationInSeconds': 0,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'UPLOAD_ARTIFACTS',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          37,
          124000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          37,
          161000,
          tzinfo=tzlocal()),
          'durationInSeconds': 0,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'FINALIZING',
          'phaseStatus': 'SUCCEEDED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          37,
          161000,
          tzinfo=tzlocal()),
          'endTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          39,
          260000,
          tzinfo=tzlocal()),
          'durationInSeconds': 2,
          'contexts': [
            {
              'statusCode': '',
              'message': ''
            }
          ]
        },
        {
          'phaseType': 'COMPLETED',
          'startTime': datetime.datetime(2021,
          11,
          18,
          20,
          29,
          39,
          260000,
          tzinfo=tzlocal())
        }
      ],
      'source': {
        'type': 'NO_SOURCE',
        'buildspec': 'version: 0.2\nenv:\n  exported-variables:\n    - GIT_COMMIT_ID\n    - GIT_COMMIT_MSG\nphases:\n  install:\n      runtime-versions:\n          python: 3.7\n      # commands:\n      # - pip3 install boto3\n  build:\n      commands:\n      - echo "=======================Start-Deployment============================="\n      - echo "Getting the SSH Private Key"\n      - |\n        python3 - << "EOF"\n        from boto3 import client\n        import os\n        s3 = client(\'s3\')\n        kms = client(\'kms\')\n        enckey = s3.get_object(Bucket=os.getenv(\'KeyBucket\'), Key=os.getenv(\'KeyObject\'))[\'Body\'].read()\n        privkey = kms.decrypt(CiphertextBlob=enckey)[\'Plaintext\']\n        with open(\'enc_key.pem\', \'w\') as f:\n            print(privkey.decode("utf-8"), file=f)\n        EOF\n      - mv ./enc_key.pem ~/.ssh/id_rsa\n      - ls ~/.ssh/\n      - echo "Setting SSH config profile"\n      - | \n        cat > ~/.ssh/config <<EOF\n        Host *\n          AddKeysToAgent yes\n          StrictHostKeyChecking no\n          IdentityFile ~/.ssh/id_rsa\n        EOF\n      - chmod 600 ~/.ssh/id_rsa\n      - echo "Cloning the repository $GitUrl on branch $Branch"\n      - git clone --single-branch --depth=1 --branch $Branch $GitUrl .\n      - ls\n      - echo "Zipping the checked out contents"\n      - |\n        if [ "$exclude_git" = "True" ]; then\n          zip -r $outputbucketkey ./ -x \'*.git*\'\n        else \n          zip -r $outputbucketkey ./\n        fi\n      - ls -alh\n      - echo "Put the zipped Object to Output Bucket"\n      - aws s3 cp $outputbucketkey s3://$outputbucket/$outputbucketpath # --sse aws:kms --sse-kms-key-id $CodePipelineArtifactKMSKeyId\n      - export GIT_COMMIT_ID=$(git rev-parse --short HEAD)\n      - echo $GIT_COMMIT_ID\n      - export GIT_COMMIT_MSG="$(git log -1 --pretty=%B)"\n      - echo $GIT_COMMIT_MSG\n      - echo "=======================End-Deployment============================="\n',
        'insecureSsl': False
      },
      'artifacts': {
        'location': ''
      },
      'cache': {
        'type': 'NO_CACHE'
      },
      'environment': {
        'type': 'LINUX_CONTAINER',
        'image': 'aws/codebuild/standard:2.0',
        'computeType': 'BUILD_GENERAL1_SMALL',
        'environmentVariables': [
          {
            'name': 'outputbucket',
            'value': 'git-2-s3-outputbucket-1mmykhkhv9rdr',
            'type': 'PLAINTEXT'
          },
          {
            'name': 'KeyBucket',
            'value': 'git-2-s3-keybucket-h7vath32e9dt',
            'type': 'PLAINTEXT'
          },
          {
            'name': 'outputbucketkey',
            'value': 'bellwethercoffee-sw_tagpipeline.zip',
            'type': 'PLAINTEXT'
          },
          {
            'name': 'exclude_git',
            'value': 'True',
            'type': 'PLAINTEXT'
          },
          {
            'name': 'Branch',
            'value': 'v4.1.1',
            'type': 'PLAINTEXT'
          },
          {
            'name': 'GitUrl',
            'value': 'git@github.com:bellwethercoffee-sw/tagpipeline.git',
            'type': 'PLAINTEXT'
          },
          {
            'name': 'KeyObject',
            'value': 'enc_key',
            'type': 'PLAINTEXT'
          },
          {
            'name': 'outputbucketpath',
            'value': 'bellwethercoffee-sw/tagpipeline/v4.1.1/',
            'type': 'PLAINTEXT'
          }
        ],
        'privilegedMode': False,
        'imagePullCredentialsType': 'CODEBUILD'
      },
      'serviceRole': 'arn:aws:iam::025870537499:role/git-2-s3-CodeBuildServiceRole-LVN3G6XA5AEX',
      'logs': {
        'groupName': '/aws/codebuild/GitPullCodeBuild-zHs8bEARfXWG',
        'streamName': 'c16f26b4-3ed1-4b6d-82e9-3f491b813671',
        'deepLink': 'https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logEvent:group=/aws/codebuild/GitPullCodeBuild-zHs8bEARfXWG;stream=c16f26b4-3ed1-4b6d-82e9-3f491b813671',
        'cloudWatchLogsArn': 'arn:aws:logs:us-east-1:025870537499:log-group:/aws/codebuild/GitPullCodeBuild-zHs8bEARfXWG:log-stream:c16f26b4-3ed1-4b6d-82e9-3f491b813671'
      },
      'timeoutInMinutes': 14,
      'queuedTimeoutInMinutes': 60,
      'buildComplete': True,
      'initiator': 'git-2-s3-GitPullRole-5J4YPR1XSIUM/git-2-s3-GitPullLambda-x57YN284HiSm',
      'encryptionKey': 'arn:aws:kms:us-east-1:025870537499:alias/aws/s3',
      'exportedEnvironmentVariables': [
        {
          'name': 'GIT_COMMIT_ID',
          'value': 'e9f4d9b'
        },
        {
          'name': 'GIT_COMMIT_MSG',
          'value': 'test4'
        }
      ]
    }
  ],
  'buildsNotFound': [],
  'ResponseMetadata': {
    'RequestId': 'd229f2e7-545e-43a0-b484-9f0f53176d94',
    'HTTPStatusCode': 200,
    'HTTPHeaders': {
      'x-amzn-requestid': 'd229f2e7-545e-43a0-b484-9f0f53176d94',
      'content-type': 'application/x-amz-json-1.1',
      'content-length': '5934',
      'date': 'Thu, 18 Nov 2021 20:29:41 GMT'
    },
    'RetryAttempts': 0
  }
}
