name: CI/CD Beta

on:
    push:
        tags:
            - v*beta*

    workflow_dispatch:
      inputs:
       environment:
         description: 'Environment'
         default: 'development'
         required: true
       milestone:
         description: 'Milestone: Values = beta|dvt'
         default: 'beta'
         required: true


env:
  DOCKER_IMAGE: test/test


jobs:
  transpile:
    name: Transpile
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: transpile

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
          node-version: '14'
          registry-url: https://npm.pkg.github.com
          scope: "@bellwethercoffee"
          always-auth: true

    - name: Install Yarn package manager
      run: npm install -g yarn

    - name: Create .version file
      run: |
        branch=`git branch --show-current`
        branch=${branch##*/}
        echo $branch+`date '+%Y%m%d'`.sha.`git rev-parse --short HEAD` > .version
        cat .version

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    outputs:
      DOCKER_IMAGE_TAG: ${{ steps.set-docker-image-tag.outputs.DOCKER_IMAGE_TAG}}
    steps:
      - uses: actions/checkout@v2
      - name: Set Docker Image Tag
        id: set-docker-image-tag
        run: |
          branch=`git branch --show-current`
          tag=$(echo $branch | tr / _)
          tag=`if [ "$tag" = "develop" ]; then echo "latest-wip"; else echo "$tag"; fi`
          echo "::set-output name=DOCKER_IMAGE_TAG::$tag"

  docker_tag:
    name: docker_tag
    runs-on: ubuntu-latest
    needs: build
    outputs:
      DOCKER_IMAGE_TAGV2: ${{ steps.set-docker-image-tag2.outputs.DOCKER_IMAGE_TAGV2}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set Docker Image Tag Based on github tag
        id: set-docker-image-tag2
        run: |
          git tag -l | tail -1
          echo "::set-output name=DOCKER_IMAGE_TAGV2::$(git describe --tags --abbrev=0)"

      - name: Test
        run: |
          echo $DOCKER_IMAGE_TAGV2
          echo ${{ env.DOCKER_IMAGE_TAGV2 }}

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_TAG: ${{ needs.test.outputs.DOCKER_IMAGE_TAG }}
    steps:

      - name: Build Docker Image
        run: |
          ls -lash
          echo "${{ env.DOCKER_IMAGE_TAG }}"

  release_docker:
    name: Release_Docker
    needs: docker_tag
    runs-on: ubuntu-latest
    env:
        DOCKER_IMAGE_TAGV2: ${{ needs.docker_tag.outputs.DOCKER_IMAGE_TAGV2 }}
    steps:
      - name: Build Docker Image Standard
        run: |
          echo "${{ env.DOCKER_IMAGE_TAGV2 }}"
